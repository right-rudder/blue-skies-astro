---
// Import section components
import { SITE } from "@data/constants";
import MainLayout from "@/layouts/MainLayout.astro";
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";

// import index
import HeroSection from "@components/sections/landing/HeroSection.astro";
import HeroSectionAlt from "@components/sections/landing/HeroSectionAlt.astro";
import ClientsSection from "@components/sections/landing/ClientsSection.astro";
import FeaturesGeneral from "@components/sections/features/FeaturesGeneral.astro";
import FeaturesNavs from "@components/sections/features/FeaturesNavs.astro";
import TestimonialsSection from "@components/sections/testimonials/TestimonialsSection.astro";
import PricingSection from "@components/sections/pricing/PricingSection.astro";
import FAQ from "@components/sections/misc/FAQ.astro";
import AnnouncementBanner from "@components/ui/banners/AnnouncementBanner.astro";
import privatePilotPass from "@images/blue-skies-private-pilot-checkride-pass-600.webp";
import CTA from "@/components/sections/misc/CTA.astro";

import faqs from "@data/faqs.json";
import features from "@data/features.json";
import pricing from "@data/pricing.json";
import type { CollectionEntry } from "astro:content";

// Images
import featureImage from "@images/blue-skies-private-pilot-checkride-pass-600.webp";
import tools from "src/assets/images/blue-skies-pair-of-cessnas-7a3-lanett-municipal-airport.webp";
import construction from "src/assets/images/blue-skies-over-auburn.webp";
import dashboard from "src/assets/images/blue-skies-auburn-university-student-pilot-programs.webp";

import { partnersData } from "@/data_files/constants";
import GoogleMap from "@/components/sections/misc/GoogleMap.astro";
import CardRelated from "@/components/ui/cards/CardRelated.astro";

// Use `getStaticPaths` to generate static routes for generated pages on build
export async function getStaticPaths() {
  const pilotTrainingLocations = await getCollection(
    "pilotTraining",
    ({ id }) => id,
  );
  return pilotTrainingLocations.map((post) => {
    const idWithoutLang = post.id; // Remove the "fr/" prefix
    return {
      params: { id: idWithoutLang },
      props: { post },
    };
  });
}

// Get the props for this page that define a specific insight post
const { post } = Astro.props;

const { Content } = await render(post);

// consts index
const englishBlogEntries = await getCollection("blog", ({ id }) => {
  return id.startsWith("en/");
});

const blogPosts: CollectionEntry<"blog">[] = englishBlogEntries.sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const avatarSrcs: Array<string> = [
  "https://images.unsplash.com/photo-1568602471122-7832951cc4c5?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2&w=300&h=300&q=80",
  "https://images.unsplash.com/photo-1531927557220-a9e23c1e4794?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2&w=300&h=300&q=80",
  "https://images.unsplash.com/photo-1541101767792-f9b2b1c4f127?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&&auto=format&fit=facearea&facepad=3&w=300&h=300&q=80",
  "https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2&w=300&h=300&q=80",
];

const ctaDiscovery = {
  isRightSection: false,
  title: "Fly now with Blue Skies Above",
  subTitle: "Schedule a Discovery Flight and explore the clouds!",
  single: true,
  img: construction,
  imgAlt: "Flight training syllabus materials",
  btnExists: true,
  btnTitle: "Get Started",
  btnURL: "/discovery-flights",
};

const blogSectionTitle: string = "The Latest from Our Blog";
const blogSectionSubTitle: string =
  "Stay up-to-date with the latest news, tips, and stories from Blue Skies Above. Our blog features insights from our instructors, student experiences, and updates on aviation trends.";

const location = post;
const locationCity = location.data.location.city || "your area";
const locationStateShort = location.data.location.stateShort || "your state";
const locationStateLong = location.data.location.stateLong || "your state";
const locationDescription =
  location.data.description ||
  "A great place with unique attractions and a welcoming community.";
const locationCounty =
  location.data.location.baseLocation ||
  "A well-known county with rich history and local charm.";
const locationKeyPlace1 =
  location.data.location.keyPlace1 || "A popular landmark worth visiting.";
const locationKeyPlace2 =
  location.data.location.keyPlace2 || "Another must-see location in the area.";

function randomItem(arr: string[]) {
  return arr[Math.floor(Math.random() * arr.length)];
}

const headerImage = randomItem(location.data.location.headerImages || []);
const rawHeadline = randomItem(location.data.location.headlines || []);
const headerH1 = rawHeadline
  .replace("{{city}}", locationCity)
  .replace("{{stateShort}}", locationStateShort)
  .replace("{{baseLocation}}", locationCounty)
  .replace("{{stateLong}}", locationStateLong)
  .replace("{{keyPlace1}}", locationKeyPlace1)
  .replace("{{keyPlace2}}", locationKeyPlace2);

const pageTitle: string = `${locationCity}, ${locationStateLong} | Flight School for Pilot Training  | ${SITE.title}`;
const metaDescription = `Explore the top flight school near you, we're based near ${locationCity}, ${locationStateShort}.`;
const ogTitle = `${locationCity}, ${locationStateLong} | Pilot Training | ${SITE.title}`;
---

<MainLayout
  title={pageTitle}
  customDescription={metaDescription}
  customOgTitle={ogTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "Article",
    headline: post.data.title,
    description: metaDescription,
    image: post.data.main.imgCard.src,
    author: {
      "@type": "Organization",
      name: SITE.title,
    },
    publisher: {
      "@type": "Organization",
      name: SITE.title,
      logo: {
        "@type": "ImageObject",
        url: "https://flytheblueskies.com/favicon.ico",
      },
    },
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": `https://flytheblueskies.com/pilot-training/${post.id}`,
    },
  }}
>
  <AnnouncementBanner
    btnId="dismiss-button"
    btnTitle="Are you considering a professional flight program at a university?"
    url="/professional-flight-program"
  />

  <HeroSection
    title={headerH1}
    subTitle=`Embark on your aviation journey with Blue Skies Above, Alabama's premier flight school. Located at Lanett Municipal Airport (7A3), we offer personalized training programs, from Private Pilot to Commercial certifications, guided by experienced instructors. Whether you're in Auburn, Columbus, or beyond, take the first step toward your pilot's license today.`
    primaryBtn="Enroll now"
    primaryBtnURL="/enroll-at-blue-skies"
    secondaryBtn="Our Programs"
    secondaryBtnURL="/flight-training-programs"
    withReview={true}
    avatars={avatarSrcs}
    rating=`<span class="font-bold">5</span> / 5`
    starCount={5}
    reviews=`From <span class="font-bold">17</span> Reviews`
    src={privatePilotPass}
    alt="Private Pilot receiving Checkride Pass certificate"
  />
  <FeaturesNavs
    title=`The best time to <span class="text-picton-blue-500 dark:text-picton-blue-400">start flying</span> is now`
    tabs={[
      {
        heading: "Start a Conversation",
        content:
          "The first step in pilot training is reaching out to a flight school. Blue Skies Above welcomes you to the world of aviation.",
        svg: "messages",
        src: tools,
        alt: "A pair of Cessna 172s at Lanett Municipal Airport",
        first: true,
      },
      {
        heading: "Take Your First Flight Lesson",
        content:
          "Also known as a discovery flight, take the controls of the aircraft and fly the plane. See if becoming a pilot is right for you.",
        svg: "takeoff",
        src: dashboard,
        alt: "Auburn University student pilot program",
        second: true,
      },
      {
        heading: "Start Training",
        content:
          "You've got the best flight school in Lanett, AL supporting you every step of the way. We're experts in flight training.",
        svg: "lesson",
        src: construction,
        alt: "Student pilot in an aircraft with instructor",
      },
    ]}
  />

  <FeaturesGeneral
    title="Preparing future pilots to launch their aviation careers"
    subTitle="Discover why aspiring pilots in Auburn and throughout the Alabama area trust Blue Skies Above to turn their aviation dreams into reality. With experienced instructors and comprehensive programs, we help students build the skills and confidence needed for a successful aviation career."
    src={featureImage}
    alt=""
    features={features}
  />

  <ClientsSection
    title="Dedicated to flight training"
    subTitle="Blue Skies Above is a proud partner of these aviation associations and companies"
    partners={partnersData}
  />

  <CTA content={ctaDiscovery} />

  <TestimonialsSection
    title="Take Off With Confidence"
    subTitle="At Blue Skies Above, we make your aviation dreams a reality through fun, efficient, and safety-focused flight training — right from the first flight."
    testimonials={[
      {
        content:
          "Training with Blue Skies Above was the best decision I’ve made. The instructors were knowledgeable, patient, and made every lesson engaging. I went from zero flight time to earning my private pilot license faster than I thought possible!",
        author: "Mark Eldridge",
        role: "Private Pilot Graduate",
        avatarSrc:
          "https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5?q=80&w=1453&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D8&auto=format&fit=facearea&facepad=2&w=320&h=320&q=80",
      },
      {
        content:
          "Flying out of Lanett made a huge difference. The quiet skies meant more time flying and less time waiting. The team made the learning process enjoyable from start to finish.",
        author: "Tasha Bennett",
        role: "Instrument Rating Student",
        avatarSrc:
          "https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5?q=80&w=1453&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D8&auto=format&fit=facearea&facepad=2&w=320&h=320&q=80",
      },
    ]}
    statistics={[
      {
        count: "250+",
        description:
          "students trained for private, commercial, and instructor certifications",
      },
      {
        count: "6",
        description: "aircraft available for primary and advanced training",
      },
      {
        count: "30%",
        description:
          "faster progress due to low-traffic airspace and efficient scheduling",
      },
      {
        count: "99%",
        description:
          "student satisfaction from first solo to checkride completion",
      },
    ]}
  />

  <!-- <PricingSection pricing={pricing} /> -->

  <FAQ title="Frequently<br />asked questions" faqs={faqs} />

  <GoogleMap />

  <section
    class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
  >
    <div class="mx-auto mb-10 max-w-2xl text-center lg:mb-14">
      <h2
        class="text-picton-blue-600 dark:text-picton-blue-500 text-2xl font-bold md:text-4xl md:leading-tight"
      >
        {blogSectionTitle}
      </h2>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {blogSectionSubTitle}
      </p>
    </div>
    <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {
        blogPosts
          .slice(0, 3)
          .map((blogEntry) => <CardRelated blogEntry={blogEntry} />)
      }
    </div>
  </section>

  <HeroSectionAlt
    title="Fly now with Blue Skies Above"
    subTitle="Schedule a Discovery Flight and explore the clouds!"
    btnTitle="Get Started"
    url="/discovery-flights"
  />
</MainLayout>

<style is:global>
  :root {
    --transition-cubic: cubic-bezier(0.165, 0.84, 0.44, 1);
  }

  html {
    scroll-behavior: smooth;
  }

  article h2,
  article h3,
  article h4,
  article h5,
  article h6 {
    font-weight: bold;
    margin-top: 2.5rem;
    scroll-margin-top: 3rem;
  }

  h2 {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  h4 {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  p {
    margin-top: 1.5rem;
  }

  #toc li {
    display: flex;
    align-items: center;
    opacity: 0.8;
    transition: all 300ms var(--transition-cubic);
  }

  #toc li.selected {
    opacity: 1;
  }

  #toc li svg {
    width: 0;
    height: 0;
    transition:
      height 400ms var(--transition-cubic),
      width 400ms var(--transition-cubic);
  }

  #toc li.selected svg {
    width: 1.25rem;
    height: 1.25rem;
    margin-right: 0.3rem;
  }
</style>

<script>
  const onScroll = (): void => {
    const article = document.querySelector("article");
    if (!article) return;

    const articleHeight = article.offsetHeight;
    const articleOffsetTop = article.offsetTop;

    const scrollTop = window.scrollY || document.documentElement.scrollTop;

    if (articleHeight && articleOffsetTop && scrollTop) {
      const progress =
        ((scrollTop - articleOffsetTop) /
          (articleHeight - window.innerHeight)) *
        100;

      const progressBar = document.getElementById("progress");
      const progressBarMobile = document.getElementById("progress-mobile");

      if (progressBar && progressBarMobile) {
        progressBar.style.width = `${progress}%`;
        progressBarMobile.style.width = `${progress}%`;
      }
    }
  };

  document.addEventListener("DOMContentLoaded", (event) => {
    window.onscroll = onScroll;

    // Set initial width of progress bar
    const progressBar = document.getElementById("progress");
    const progressBarMobile = document.getElementById("progress-mobile");

    if (progressBar && progressBarMobile) {
      progressBar.style.width = "0%";
      progressBarMobile.style.width = "0%";
    }
  });
</script>
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.timeline({
    scrollTrigger: {
      scrub: 1,
      pin: true,
      trigger: "#pin",
      start: "top 20%",
      endTrigger: "footer",
      end: "top bottom",
    },
  });

  const SVG_HTML_STRING =
    '<svg class="w-0 h-0 flex-none" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fa5a15"><path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></svg>';

  function setActiveLinkById(id: string | null) {
    const listItems = document.querySelectorAll("#toc li");
    listItems.forEach((item) => item.classList.remove("selected"));

    if (!id) return;

    const activeLink = document.querySelector(`#toc a[href="#${id}"]`);

    if (!activeLink) return;

    const listItem = activeLink.parentElement;
    listItem?.classList.add("selected");
  }

  document.addEventListener("DOMContentLoaded", function () {
    // The article element that contains the Markdown content
    const article: HTMLElement | null = document.querySelector("article");
    // The ToC container <ul> element
    const tocList: HTMLElement | null = document.querySelector("#toc ul");

    const headings: NodeListOf<HTMLElement> | [] = article
      ? article.querySelectorAll("h1, h2, h3, h4, h5, h6")
      : [];

    headings.forEach((heading, i) => {
      if (heading instanceof HTMLElement) {
        const listItem = document.createElement("li");
        listItem.className = "toc-level-" + heading.tagName.toLowerCase();

        const tempDiv = document.createElement("div");
        tempDiv.innerHTML = SVG_HTML_STRING;

        const svg = tempDiv.firstChild;
        listItem.appendChild(svg as Node);

        const link = document.createElement("a");
        link.href = "#" + heading.id;
        link.textContent = heading.textContent;
        listItem.appendChild(link);

        tocList?.appendChild(listItem);

        gsap.timeline({
          scrollTrigger: {
            trigger: heading,
            start: "top 20%",
            end: () =>
              `bottom top+=${i === headings.length - 1 ? 0 : (headings[i + 1] as HTMLElement).getBoundingClientRect().height}`,
            onEnter: () => setActiveLinkById(heading.id),
            onLeaveBack: () =>
              setActiveLinkById((headings[i - 1] as HTMLElement)?.id),
          },
        });
      }
    });
  });
</script>
