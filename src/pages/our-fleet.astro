---
import { SITE } from "@data/constants";
import MainLayout from "@/layouts/MainLayout.astro";
import { Image } from "astro:assets";
import postImage from "../assets/images/blue-skies-flying-over-opelika-sunset.webp";
import airplane1 from "../assets/images/cessna-N5378D.webp";
import airplane2 from "../assets/images/cessna-n246sp.webp";
import airplane3 from "../assets/images/cessna-n5225d.webp";
import airplane4 from "../assets/images/cessna-n717g.webp";
import airplane5 from "../assets/images/cessna-n738sr.webp";
import { imageMetadata } from "astro/assets/utils";

interface Post {
  id: string;
  data: {
    title: string;
    description: string;
    cardImage: ImageMetadata;
    cardImageAlt: string;
  };
}

const post: Post = {
  id: "our-fleet-overview",
  data: {
    title: "Explore the Blue Skies Above Fleet",
    description: "Discover the Cessna 172 aircraft that make up our flight training fleet. Each one is uniquely equipped and maintained for a safe, modern flight training experience.",
    cardImage: postImage,
    cardImageAlt: "Front view of a Blue Skies Above training aircraft on the tarmac.",
  },
};

const Content = `
  <p>At Blue Skies Above, we believe that great pilots are made in great aircraft. That's why we've carefully curated a fleet of modern, well-equipped Cessna 172s to support every step of your aviation journey. From your very first flight to your advanced instrument and commercial ratings, our aircraft provide a safe, reliable, and enjoyable platform for learning. Each plane is meticulously maintained to the highest standards, ensuring you can focus on what matters most: mastering the art of flight.</p>
  <h2 id="n717g">N717G – Cessna 172N</h2>
  <div class="h-64"> 
    <img src=${airplane4.src} alt="N717G Cessna 172N" class="w-3/3 h-3/4 object-cover"/>
  </div>
  <p><strong>Power:</strong> 160HP<br/>
     <strong>Features:</strong> Dual G5 / G530 Nav System</p>
  <p><a href="/visit-flight-school">Like this plane? Come fly it!</a></p>

  <h2 id="n5378d">N5378D – Cessna 172N</h2>
  <div class="h-64"> 
    <img src=${airplane3.src} alt="N717G Cessna 172N" class="w-3/3 h-3/4 object-cover"/>
  </div>
  <p><strong>Power:</strong> 180HP<br/>
     <strong>Features:</strong> Dual G5 / G430 Nav System</p>
  <p><a href="/visit-flight-school">Like this plane? Come fly it!</a></p>

  <h2 id="n5225d">N5225D – Cessna 172N</h2>
  <div class="h-64"> 
    <img src=${airplane1.src} alt="N717G Cessna 172N" class="w-3/3 h-3/4 object-cover"/>
  </div>
  <p><strong>Power:</strong> 180HP<br/>
     <strong>Features:</strong> Dual G5 / G430 Nav System</p>
  <p><a href="/visit-flight-school">Like this plane? Come fly it!</a></p>

  <h2 id="n738sr">N738SR – Cessna 172N</h2>
  <div class="h-64"> 
    <img src=${airplane5.src} alt="N717G Cessna 172N" class="w-3/3 h-3/4 object-cover"/>
  </div>
  <p><strong>Power:</strong> 160HP<br/>
     <strong>Features:</strong> Dynon Skyview / G530 Nav System</p>
  <p><a href="/visit-flight-school">Like this plane? Come fly it!</a></p>

  <h2 id="n246sp">N246SP – Cessna 172N</h2>
  <div class="h-64"> 
    <img src=${airplane2.src} alt="N717G Cessna 172N" class="w-3/3 h-3/4 object-cover"/>
  </div>
  <p><strong>Power:</strong> 180HP<br/>
     <strong>Features:</strong> Dual Dynon Skyview / GTN 650 Touch Screen</p>
  <p><a href="/visit-flight-school">Like this plane? Come fly it!</a></p>
`;


const pageTitle: string = `${post.data.title} | ${SITE.title}`;
const metaDescription = post.data.description;
const ogTitle = `${post.data.title} | Insights | ${SITE.title}`;
---


<MainLayout
  title={pageTitle}
  customDescription={metaDescription}
  customOgTitle={ogTitle}
  structuredData={{
    "@context": "https://schema.org",
    "@type": "Article",
    headline: post.data.title,
    description: metaDescription,
    image: post.data.cardImage,
    author: {
      "@type": "Organization",
      name: SITE.title,
    },
    publisher: {
      "@type": "Organization",
      name: SITE.title,
      logo: {
        "@type": "ImageObject",
        url: "https://screwfast.uk/favicon.ico",
      },
    },
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": `https://screwfast.uk/insights/${post.id}`,
    },
  }}
>
  <section class="py-6 sm:py-8 lg:py-12">
    <div class="mx-auto max-w-(--breakpoint-xl) px-4 md:px-8">
      <div class="grid gap-8 md:grid-cols-2 lg:gap-12">
        <div>
          <div class="h-24 overflow-hidden rounded-lg shadow-lg md:h-80">
            <Image
              class="h-full w-full object-cover object-center"
              src={post.data.cardImage}
              alt={post.data.cardImageAlt}
              draggable={"false"}
              format={"avif"}
            />
          </div>
          <div
            id="progress-mobile"
            class="fixed top-0 left-0 h-2 w-full bg-linear-to-r from-picton-blue-400/30 to-picton-blue-400 md:hidden"
          ></div>
          <div id="pin" class="mt-10 hidden space-y-4 md:block">
            <div class="h-px w-full overflow-hidden bg-neutral-300 dark:bg-neutral-700">
              <div
                id="progress"
                class="h-px w-full bg-linear-to-r from-picton-blue-400/30 to-picton-blue-400"
              ></div>
            </div>
            <p class="text-sm text-pretty text-neutral-500">
              Table of Contents:
            </p>
            <div id="toc">
              <ul class="space-y-2 text-base text-pretty text-neutral-700 transition duration-300 dark:text-neutral-400"></ul>
            </div>
          </div>
        </div>

        <div class="md:pt-8">
          <h1 class="mb-4 text-center text-2xl font-bold text-balance text-neutral-800 sm:text-3xl md:mb-6 md:text-left dark:text-neutral-200">
            {post.data.title}
          </h1>

          <article class="text-lg text-pretty text-neutral-700 dark:text-neutral-300">
            <Fragment set:html={Content} />
          </article>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<!-- Keep the same style and script blocks as in your original page -->

<style is:global>
  :root {
    --transition-cubic: cubic-bezier(0.165, 0.84, 0.44, 1);
  }

  html {
    scroll-behavior: smooth;
  }

  article h2,
  article h3,
  article h4,
  article h5,
  article h6 {
    font-weight: bold;
    margin-top: 2.5rem;
    scroll-margin-top: 3rem;
  }

  h2 {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  h4 {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  p {
    margin-top: 1.5rem;
  }

  #toc li {
    display: flex;
    align-items: center;
    opacity: 0.8;
    transition: all 300ms var(--transition-cubic);
  }

  #toc li.selected {
    opacity: 1;
  }

  #toc li svg {
    width: 0;
    height: 0;
    transition:
      height 400ms var(--transition-cubic),
      width 400ms var(--transition-cubic);
  }

  #toc li.selected svg {
    width: 1.25rem;
    height: 1.25rem;
    margin-right: 0.3rem;
  }
</style>

<script>
  const onScroll = (): void => {
    const article = document.querySelector("article");
    if (!article) return;

    const articleHeight = article.offsetHeight;
    const articleOffsetTop = article.offsetTop;

    const scrollTop = window.scrollY || document.documentElement.scrollTop;

    if (articleHeight && articleOffsetTop && scrollTop) {
      const progress =
        ((scrollTop - articleOffsetTop) /
          (articleHeight - window.innerHeight)) *
        100;

      const progressBar = document.getElementById("progress");
      const progressBarMobile = document.getElementById("progress-mobile");

      if (progressBar && progressBarMobile) {
        progressBar.style.width = `${progress}%`;
        progressBarMobile.style.width = `${progress}%`;
      }
    }
  };

  document.addEventListener("DOMContentLoaded", (event) => {
    window.onscroll = onScroll;

    // Set initial width of progress bar
    const progressBar = document.getElementById("progress");
    const progressBarMobile = document.getElementById("progress-mobile");

    if (progressBar && progressBarMobile) {
      progressBar.style.width = "0%";
      progressBarMobile.style.width = "0%";
    }
  });
</script>
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.timeline({
    scrollTrigger: {
      scrub: 1,
      pin: true,
      trigger: "#pin",
      start: "top 20%",
      endTrigger: "footer",
      end: "top bottom",
    },
  });

  const SVG_HTML_STRING =
    '<svg class="w-0 h-0 flex-none" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="#fa5a15"><path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></svg>';

  function setActiveLinkById(id: string | null) {
    const listItems = document.querySelectorAll("#toc li");
    listItems.forEach((item) => item.classList.remove("selected"));

    if (!id) return;

    const activeLink = document.querySelector(`#toc a[href="#${id}"]`);

    if (!activeLink) return;

    const listItem = activeLink.parentElement;
    listItem?.classList.add("selected");
  }

  document.addEventListener("DOMContentLoaded", function () {
    // The article element that contains the Markdown content
    const article: HTMLElement | null = document.querySelector("article");
    // The ToC container <ul> element
    const tocList: HTMLElement | null = document.querySelector("#toc ul");

    const headings: NodeListOf<HTMLElement> | [] = article
      ? article.querySelectorAll("h1, h2, h3, h4, h5, h6")
      : [];

    headings.forEach((heading, i) => {
      if (heading instanceof HTMLElement) {
        const listItem = document.createElement("li");
        listItem.className = "toc-level-" + heading.tagName.toLowerCase();

        const tempDiv = document.createElement("div");
        tempDiv.innerHTML = SVG_HTML_STRING;

        const svg = tempDiv.firstChild;
        listItem.appendChild(svg as Node);

        const link = document.createElement("a");
        link.href = "#" + heading.id;
        link.textContent = heading.textContent;
        listItem.appendChild(link);

        tocList?.appendChild(listItem);

        gsap.timeline({
          scrollTrigger: {
            trigger: heading,
            start: "top 20%",
            end: () =>
              `bottom top+=${i === headings.length - 1 ? 0 : (headings[i + 1] as HTMLElement).getBoundingClientRect().height}`,
            onEnter: () => setActiveLinkById(heading.id),
            onLeaveBack: () =>
              setActiveLinkById((headings[i - 1] as HTMLElement)?.id),
          },
        });
      }
    });
  });
</script>