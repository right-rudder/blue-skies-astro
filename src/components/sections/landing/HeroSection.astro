---
// Import the necessary dependencies
import { Image } from "astro:assets";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import ReviewComponent from "@components/ui/blocks/ReviewComponent.astro";

// Define props from Astro
const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  src,
  alt,
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
  withReview?: boolean;
  avatars?: Array<string>;
  starCount?: number;
  rating?: string;
  reviews?: string;
  src?: any;
  alt?: string;
}
---

<!-- Defining a grid container that holds all the content -->
<div
  class="mx-auto grid max-w-[85rem] gap-4 px-4 py-14 sm:px-6 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="rounded-2xl backdrop-blur-2xl">
    <!-- Each h1 and p tag renders a portion of the title and subTitle defined above -->
    <h1
      class="block text-3xl font-bold tracking-tighter text-balance text-neutral-800 sm:text-4xl lg:text-5xl lg:leading-tight dark:text-neutral-200"
    >
      <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
      <Fragment set:html={title} />
    </h1>
    {
      subTitle && (
        <h2 class="mt-3 leading-relaxed text-pretty text-neutral-700 lg:w-4/5 dark:text-neutral-400">
          {subTitle}
        </h2>
      )
    }
    <!-- Action Button Section: This section includes two CTAs with their own styles and URL -->
    <div class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />}
      {
        secondaryBtn && (
          <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />
        )
      }
    </div>

    <!-- Review Section: This section presents avatars, review ratings and the number of reviews -->
    {
      withReview ? (
        <ReviewComponent
          avatars={avatars}
          starCount={starCount}
          rating={rating}
          reviews={reviews}
        />
      ) : (
        ""
      )
    }
  </div>

  <!-- Youtube -->
  <div class="relative w-full" style="padding-top: 56.25%;">
    <iframe
      class="absolute inset-0 -z-10 h-full w-full rounded-xl object-cover"
      src="https://www.youtube-nocookie.com/embed/9oI-zvCBU4Y?autoplay=1&mute=1&controls=0&loop=1&playlist=9oI-zvCBU4Y"
      title="YouTube video player"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      allowfullscreen
      referrerpolicy="strict-origin-when-cross-origin"></iframe>
  </div>

  <!-- Hero Image Section -->
  <!-- <div class="flex w-full h-full justify-center  ">
      <div class="top-12 overflow-hidden rounded-3xl">
      {src && alt &&
      <Image
            src={src}
            alt={alt}
            class="h-full w-full scale-110 object-cover object-center rounded-3xl"
            draggable={"false"}
            loading={"eager"}
            format={"avif"}
      />
      }
    </div>
  </div> -->
</div>
